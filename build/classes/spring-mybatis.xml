<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
					http://www.springframework.org/schema/beans/spring-beans-4.0.xsd	
					http://www.springframework.org/schema/context  
                    http://www.springframework.org/schema/context/spring-context-4.0.xsd
                    http://www.springframework.org/schema/tx
                    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
                    http://www.springframework.org/schema/aop
                    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

    <!-- 自动扫描 -->  
    <context:component-scan base-package="com.wtgkpt" />  
    
 	<!-- 引入配置文件 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" scope="prototype">
		<property name="locations">
			<list>
				<value>classpath:db.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 数据源配置, 使用应用中的DBCP数据库连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <!-- Connection Info -->
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <!-- Connection Pooling Info -->
        <property name="maxActive" value="${dbcp.maxActive}" />
        <property name="maxIdle" value="${dbcp.maxIdle}" />
    </bean>
    
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件   -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!-- 引入 mybatis 配置文件 -->
        <property name="configLocation" value="classpath:sqlMapConfig.xml"></property>
        <property name="typeAliasesPackage" value="com.wtgkpt.entity"></property>
        <!-- sql配置文件 -->
         <property name="mapperLocations" value="classpath:mapper/*Mapper.xml"></property>
         <!-- 分页插件 -->
         <property name="plugins">
	        <array>
	            <bean class="com.github.pagehelper.PageInterceptor">
	                <property name="properties">
	                    <value>
	                        helperDialect=oracle
	                        reasonable=true
	                        supportMethodsArguments=true
	                        params=count=countSql
	                        autoRuntimeDialect=true
	                    </value>
	                </property>
	            </bean>
	        </array>
	    </property>
    </bean>
    
    <!-- 扫描Mapper，DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.wtgkpt.mapper"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
    
    <!-- 通用 Mapper -->
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
	    <property name="basePackage" value="com.isea533.mybatis.mapper"/>
	    <property name="properties">
	        <value>
	            mappers=tk.mybatis.mapper.common.Mapper
	            ORDER=BEFORE
	        </value>
	    </property>
	</bean>

    <!-- 事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 传播行为 -->
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!-- 切面 -->
    <!--
        proxy-target-class="true" 表示直接使用 类 实现动态代理
     -->
    <aop:config proxy-target-class="true">
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.wtgkpt.service.impl.*.*(..))"/>
    </aop:config>

    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>
